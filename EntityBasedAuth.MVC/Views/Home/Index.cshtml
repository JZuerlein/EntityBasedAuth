@using EntityBasedAuth.Domain;
@using EntityBasedAuth.Auth.Policies;

@model IList<EmployeeReview>;

@{
    ViewData["Title"] = "Home Page";
}

<h1>Home Page</h1>

@if (!User.Identity.IsAuthenticated)
{
    <a asp-controller="Account" asp-action="LoginAsSupervisor" class="btn btn-primary">Login As Supervisor</a>
    <a asp-controller="Account" asp-action="LoginAsHR" class="btn btn-primary">Login As HumanResources</a>
    <a asp-controller="Account" asp-action="LoginAsJane" class="btn btn-primary">Login As Jane</a>
}
else
{
    <a asp-controller="Account" asp-action="Logout" class="btn btn-primary">Logout</a>

    @foreach (var ident in User.Identities)
    {
        <h3>Scheme: @ident.AuthenticationType</h3>
        <h3>Claims:</h3>
        <table class="table table-striped table-condensed">
            <thead><tr><th>Type</th><th>Value</th></tr></thead>
            <tbody>
                @foreach (var claim in ident.Claims)
                {
                    <tr>
                        <td>@claim.Type</td>
                        <td>@claim.Value</td>
                    </tr>
                }
            </tbody>
        </table>
    }

    <h3>Employee Reviews:</h3>
    @foreach (var review in Model)
    {
        if ((await AuthorizationService.AuthorizeAsync(User, review, EmployeeReviewPolicies.UserCanViewPolicyName)).Succeeded)
        {
            <a asp-controller="Home" asp-action="UnderDev" class="btn btn-primary">@review.EmployeeName</a>
        }

    }
}
